{"ast":null,"code":"import { ViewContainerRef } from '@angular/core';\nimport { AboutComponent } from './about/about.component';\nimport { ResumeComponent } from './resume/resume.component';\nimport { WorksComponent } from './works/works.component';\nimport { BlogComponent } from './blog/blog.component';\nimport { ContactComponent } from './contact/contact.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/resume-data.service\";\nimport * as i2 from \"./services/contact-service.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./components/navbar/navbar.component\";\nimport * as i5 from \"./user-card/user-card.component\";\nconst _c0 = [\"pages\"];\nconst _c1 = [\"allPages\"];\n\nfunction AppComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelement(1, \"user-card\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"config\", ctx_r0.allData);\n  }\n} // import { threadId } from 'worker_threads';\n\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    // data: any;\n    constructor(resolver, resumeDataService, contactService) {\n      this.resolver = resolver;\n      this.resumeDataService = resumeDataService;\n      this.contactService = contactService;\n      this.title = 'PortfolioV1';\n      this.notMobileScreen = true;\n      this.navLinks = [];\n      this.count = 0;\n      this.singleLoaded = false;\n      this.allLoaded = false;\n      this.componentObj = [{\n        component: AboutComponent,\n        name: 'about'\n      }, {\n        component: ResumeComponent,\n        name: 'resume'\n      }, {\n        component: WorksComponent,\n        name: 'works'\n      }, {\n        component: BlogComponent,\n        name: 'blog'\n      }, {\n        component: ContactComponent,\n        name: 'contact'\n      }];\n      this.allData = [];\n      this.aboutData = [];\n      this.resumeSecData = [];\n      this.workData = [];\n      this.blogData = [];\n      this.ContactData = [];\n      this.resolution = window.document.body.offsetWidth;\n    }\n\n    ngOnInit() {\n      this.resumeDataService.getAllData().subscribe(data => {\n        this.allData.push(data[0]);\n        this.aboutData.push(data[0].about);\n        this.resumeSecData.push(data[0].resume);\n        this.workData.push(data[0].works);\n        this.blogData.push(data[0].blog);\n        this.ContactData.push(data[0].contact);\n      });\n      this.contactService.currentMessage.subscribe(message => this.message = message);\n      console.log(\"message\", this.message);\n\n      if (this.resolution < 1200) {\n        this.loadAllPages();\n      } else {\n        this.loadSinglePage();\n      }\n\n      this.navLinks = [{\n        title: 'about',\n        active: true,\n        icon: 'fa-user'\n      }, {\n        title: 'resume',\n        active: false,\n        icon: 'fa-file-alt'\n      }, {\n        title: 'works',\n        active: false,\n        icon: 'fa-paint-brush'\n      }, {\n        title: 'blog',\n        active: false,\n        icon: 'fa-comment-alt'\n      }, {\n        title: 'contact',\n        active: false,\n        icon: 'fa-at'\n      }];\n    } // ngAfterViewInit(): void {\n    //   this.screenSize('null');\n    // }\n\n\n    screenSize(e) {\n      this.count++;\n      this.resolution = window.document.body.offsetWidth;\n\n      if (e.target.window.innerWidth === window.document.body.offsetWidth) {\n        if (this.resolution < 1200) {\n          if (!this.allLoaded) {\n            this.loadAllPages();\n          }\n        } else {\n          if (!this.singleLoaded) {\n            this.loadSinglePage();\n          }\n        }\n      }\n    }\n\n    scrollToTop(evnt) {\n      if (document.getElementsByClassName('about-container')[0].getBoundingClientRect().y < 70) {\n        this.navLinks.forEach(element => {\n          if (element.title === 'about') {\n            element.active = true;\n          }\n        });\n      } else {\n        this.navLinks.forEach(element => {\n          if (element.title === 'about') {\n            element.active = false;\n          }\n        });\n      } // console.log(\n      //   document\n      //     .getElementsByClassName('about-container')[0]\n      //     .getBoundingClientRect().y\n      // );\n\n    }\n\n    getCompName(navTitle) {\n      let dynamicComp;\n      this.componentObj.forEach(el => {\n        if (navTitle === el.name) {\n          dynamicComp = el.component;\n        }\n      });\n      return dynamicComp;\n    }\n\n    clickedNav(evnt) {\n      if (this.resolution < 1200) {\n        const componentName = evnt.currentTarget.innerText.toLowerCase();\n        document.getElementsByTagName(componentName)[0].scrollIntoView();\n        window.scrollBy(0, -60);\n      } else {\n        // tslint:disable-next-line:prefer-const\n        let navTitle = evnt.currentTarget.innerText.toLowerCase();\n        this.allPages.clear();\n        const dynamicComponent = this.getCompName(navTitle);\n        this.loadDynamicComp(dynamicComponent);\n      }\n    }\n\n    loadDynamicComp(dynamicComponenty) {\n      this.pages.clear();\n      const componentFactory = this.resolver.resolveComponentFactory(dynamicComponenty);\n      this.pages.createComponent(componentFactory);\n      this.singleLoaded = true;\n    }\n\n    loadAllPages() {\n      // debugger\n      this.allPages.clear();\n      this.pages.clear();\n      const componentFactoryAbout = this.resolver.resolveComponentFactory(AboutComponent);\n      const componentFactoryResume = this.resolver.resolveComponentFactory(ResumeComponent);\n      const componentFactoryWorks = this.resolver.resolveComponentFactory(WorksComponent);\n      const componentFactoryBlogs = this.resolver.resolveComponentFactory(BlogComponent);\n      const componentFactoryContact = this.resolver.resolveComponentFactory(ContactComponent);\n      this.allPages.createComponent(componentFactoryAbout); // const compRefAbout = this.allPages.createComponent(componentFactoryAbout);\n      // compRefAbout.instance.config = this.aboutData;\n\n      this.allPages.createComponent(componentFactoryResume); // const compRefResume = this.allPages.createComponent(componentFactoryResume);\n      // compRefResume.instance.config = this.resumeSecData;\n\n      this.allPages.createComponent(componentFactoryWorks); // const compRefWork = this.allPages.createComponent(componentFactoryWorks);\n      // compRefWork.instance.config = this.workData;\n\n      this.allPages.createComponent(componentFactoryBlogs); // const compRefBlog = this.allPages.createComponent(componentFactoryBlogs);\n      // compRefBlog.instance.config = this.blogData;\n\n      this.allPages.createComponent(componentFactoryContact); // const compRefContact = this.allPages.createComponent(componentFactoryBlogs);\n      // compRefContact.instance.config = this.ContactData;\n\n      this.allLoaded = true;\n    }\n\n    loadSinglePage() {\n      this.allPages.clear();\n      this.pages.clear();\n      const componentFactory = this.resolver.resolveComponentFactory(AboutComponent);\n      this.pages.createComponent(componentFactory);\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i1.ResumeDataService), i0.ɵɵdirectiveInject(i2.ContactServiceService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    viewQuery: function AppComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7, ViewContainerRef);\n        i0.ɵɵviewQuery(_c1, 7, ViewContainerRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.pages = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.allPages = _t.first);\n      }\n    },\n    decls: 12,\n    vars: 2,\n    consts: [[1, \"container\"], [1, \"backgroundGradient\"], [3, \"scroll\"], [3, \"config\", \"navClicked\"], [\"class\", \"userCard\", 4, \"ngIf\"], [1, \"pages\", 3, \"resize\"], [\"pages\", \"\"], [\"allPages\", \"\"], [\"id\", \"testDiv\"], [1, \"userCard\"], [3, \"config\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"main\", 2);\n        i0.ɵɵlistener(\"scroll\", function AppComponent_Template_main_scroll_2_listener($event) {\n          return ctx.scrollToTop($event);\n        }, false, i0.ɵɵresolveWindow);\n        i0.ɵɵelementStart(3, \"nav\")(4, \"navbar\", 3);\n        i0.ɵɵlistener(\"navClicked\", function AppComponent_Template_navbar_navClicked_4_listener($event) {\n          return ctx.clickedNav($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(5, AppComponent_div_5_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵlistener(\"resize\", function AppComponent_Template_div_resize_6_listener($event) {\n          return ctx.screenSize($event);\n        }, false, i0.ɵɵresolveWindow);\n        i0.ɵɵelementContainer(7, null, 6)(9, null, 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(11, \"div\", 8);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"config\", ctx.navLinks);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.notMobileScreen);\n      }\n    },\n    dependencies: [i3.NgIf, i4.NavbarComponent, i5.UserCardComponent],\n    styles: [\".container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;width:100%;height:auto}.container[_ngcontent-%COMP%]   .backgroundGradient[_ngcontent-%COMP%]{background:linear-gradient(to bottom right,rgb(80,163,162) 0%,rgb(120,204,109) 100%);width:100vw;height:100vh;position:fixed;top:0;left:0}.container[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]{background:transparent;display:flex;justify-content:flex-start;position:relative;width:100%;height:auto;max-width:1268px;max-height:674px;flex-wrap:initial}@media (max-width: 1300px){.container[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]{margin:1em 3vw;height:90vh}}@media (min-width: 1301px){.container[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]{margin:5vh 3vw;height:90vh}}@media (max-width: 1199px) and (min-width: 561px){.container[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]{width:auto;max-width:670px;max-height:none;max-height:initial;height:auto;transform:none;flex-wrap:wrap}}@media (max-width: 560px){.container[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]{width:100%;padding:67px 6px 0;margin:0;margin:initial;height:auto;flex-wrap:wrap}}.container[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   nav[_ngcontent-%COMP%]{position:relative;left:0;top:15px;width:80px;flex-basis:80px;z-index:22}@media (max-width: 764px){.container[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   nav[_ngcontent-%COMP%]{position:fixed;left:0;top:0;height:auto;width:100%}}@media (max-width: 1199px) and (min-width: 765px){.container[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   nav[_ngcontent-%COMP%]{position:fixed;left:48px;height:auto;width:100%}}.container[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .userCard[_ngcontent-%COMP%]{position:relative;width:480px;height:100%;box-shadow:10px 10px 15px #0000000d;z-index:21;background:transparent;margin-left:8px}@media (max-width: 764px){.container[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .userCard[_ngcontent-%COMP%]{position:relative;width:100%;height:auto;box-shadow:10px 10px 15px #0000000d;z-index:21;background:transparent;flex-grow:1;margin-left:0;margin-left:initial}}@media (max-width: 1199px) and (min-width: 765px){.container[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .userCard[_ngcontent-%COMP%]{position:relative;width:582px;height:600px;margin-left:83px}}.container[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .pages[_ngcontent-%COMP%]{position:relative;width:100%;height:auto;flex-grow:1;padding:15px 0;background:transparent}@media (max-width: 764px){.container[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .pages[_ngcontent-%COMP%]{position:relative;width:100%;height:auto;flex-grow:1;padding:7px 0;background:transparent}}@media (max-width: 1199px) and (min-width: 765px){.container[_ngcontent-%COMP%]   main[_ngcontent-%COMP%]   .pages[_ngcontent-%COMP%]{margin-left:83px}}.container[_ngcontent-%COMP%]   #testDiv[_ngcontent-%COMP%]{position:fixed;bottom:10px;right:10px;height:20px;width:40px;text-align:center;z-index:5000;padding-top:2.5px}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}